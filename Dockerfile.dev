# HanaNaviLite - 개발용 Dockerfile
# React 개발 서버와 백엔드 API를 동시에 실행

FROM python:3.11-slim

# 환경변수 설정
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Node.js 설치 (React 개발 서버용)
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    tesseract-ocr \
    tesseract-ocr-kor \
    tesseract-ocr-eng \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# 작업 디렉터리 설정
WORKDIR /app

# Python 의존성 설치
COPY requirements.txt .
RUN pip install -r requirements.txt

# 애플리케이션 코드 복사
COPY app/ ./app/
COPY version.py .
COPY .env.example .env

# React 앱 복사 및 의존성 설치
COPY ui/chatbot-react/ ./ui/chatbot-react/
WORKDIR /app/ui/chatbot-react
RUN npm install

# 다시 메인 디렉터리로
WORKDIR /app

# 데이터 디렉터리 생성
RUN mkdir -p data models uploads

# 헬스체크
HEALTHCHECK --interval=30s --timeout=30s --start-period=300s --retries=3 \
    CMD curl -f http://localhost:8011/api/v1/health || exit 1

# 포트 노출 (백엔드 8011, React 개발서버 5174)
EXPOSE 8011 5174

# 실행 사용자 생성
RUN useradd -m -u 1008 hananavilite
RUN chown -R hananavilite:hananavilite /app
USER hananavilite

# 시작 스크립트 생성
COPY <<EOF /app/start.sh
#!/bin/bash
# React 개발 서버 백그라운드 실행
cd /app/ui/chatbot-react && npm run dev &
# 백엔드 API 실행
cd /app && python -m app.main
EOF

RUN chmod +x /app/start.sh

# 시작 스크립트 실행
CMD ["/app/start.sh"]